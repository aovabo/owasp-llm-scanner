version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: scanner
      POSTGRES_USER: scanner
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scanner"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    command: uvicorn scanner.ui.api:app --host 0.0.0.0 --port 8000
    environment:
      - DATABASE_URL=postgresql://scanner:${DB_PASSWORD}@db:5432/scanner
      - SECRET_KEY=${SECRET_KEY}
      - PROMETHEUS_MULTIPROC_DIR=/tmp
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - api_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ui:
    build: .
    command: streamlit run scanner/ui/streamlit_app.py
    environment:
      - API_URL=http://api:8000
    ports:
      - "8501:8501"
    depends_on:
      - api
    volumes:
      - ui_logs:/app/logs

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  backup:
    build: .
    command: python scripts/backup.py
    environment:
      - DATABASE_URL=postgresql://scanner:${DB_PASSWORD}@db:5432/scanner
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - backup_data:/backups
    depends_on:
      - db

volumes:
  db_data:
  api_logs:
  ui_logs:
  prometheus_data:
  grafana_data:
  backup_data: 